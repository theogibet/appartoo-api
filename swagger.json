{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
  "title": "Appartoo - API",
    "description": "Appartoo project - API"
  },
  "host": "localhost:3000",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Friends",
      "description": "API for friends in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/email/{email}": {
      "parameters": [
        {
          "name": "email",
          "in": "path",
          "required": true,
          "description": "Email of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with email",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },

    "/users/email/{email}/password/{password}": {
      "parameters": [
        {
          "name": "email",
          "in": "path",
          "required": true,
          "description": "Email of user that we want to find",
          "type": "string"
        },
        {
          "name": "password",
          "in": "path",
          "required": true,
          "description": "Password of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with email and password",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },


    "/friends": {
      "post": {
        "tags": [
          "Friends"
        ],
        "description": "Create new friends in system",
        "parameters": [
          {
            "name": "friend",
            "in": "body",
            "description": "Both mail of friends",
            "schema": {
              "$ref": "#/definitions/Friend"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New friend is created",
            "schema": {
              "$ref": "#/definitions/Friend"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Friends"
        ],
        "summary": "Get all friends in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Friends"
            }
          }
        }
      }
    },
    "/friends/emailUser/{emailUser}/emailFriend/{emailFriend}": {
      "parameters": [
        {
          "name": "emailUser",
          "in": "path",
          "required": true,
          "description": "Email of user",
          "type": "string"
        },
        {
          "name": "emailFriend",
          "in": "path",
          "required": true,
          "description": "Email of user",
          "type": "string"
        }
      ],
      "delete": {
        "summary": "Delete friend with given email user and email friend",
        "tags": [
          "Friends"
        ],
        "responses": {
          "200": {
            "description": "Friend is deleted",
            "schema": {
              "$ref": "#/definitions/Friend"
            }
          }
        }
      }
    },
    "/friends/emailUser/{emailUser}": {
      "parameters": [
        {
          "name": "emailUser",
          "in": "path",
          "required": true,
          "description": "Email of user",
          "type": "string"
        }
      ],
      "get": {
        "summary": "Get friends with given email user",
        "tags": [
          "Friends"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Friends"
            }
          }
        }
      }
    }

  },
  "definitions": {
    "User": {
      "required": [
        "email",
        "password",
        "name",
        "age"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "age": {
          "type": "number"
        },
        "family": {
          "type": "string"
        },
        "race": {
          "type": "string"
        },
        "food": {
          "type": "string"
        }
      }
    },
    "updateUser": {
      "required": [
        "email",
        "_id"
      ],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "age": {
          "type": "number"
        },
        "family": {
          "type": "string"
        },
        "race": {
          "type": "string"
        },
        "food": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    },
    "Friend": {
      "required": [
        "emailFriend",
        "emailUser"
      ],
      "properties": {
        "emailFriend": {
          "type": "string"
        },
        "emailUser": {
          "type": "string"
        }
      }
    },
    "Friends": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Friend"
      }
    }
  }
}
